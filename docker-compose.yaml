version: "3.4"

x-common-variables: &common-variables
  KEYCLOAK_URL:
  KEYCLOAK_REALM:
  KEYCLOAK_CLIENT_ID:
  KEYCLOAK_REDIRECT_URI:

services:
  orion:
    image: fiware/orion:3.10.1
   # image: fiware/orion-ld:1.4.0
    hostname: orion
    depends_on:
      - mongodb
    networks:
      - hostnet
    ports:
      - "1026:1026"
    command: -dbhost mongodb -logLevel DEBUG
    #command: -dbhost mongodb -logLevel DEBUG -forwarding -experimental

  draco:
    image: draco
    build: ./build/draco
    hostname: draco
    container_name: draco
    networks:
      - hostnet
    ports:
        # NIFI web UI (https)
        - 8443:8443
        # Listen AAS
        - 8085:8085
        # Listen Orion
        - 8086:8086
    env_file:
        - conf/draco/nifi.env
    tty: true     
    volumes:
      - ./conf/draco/templates:/opt/nifi/nifi-current/templates

  mongodb:
    image: mongo:7.0.5
    hostname: mongodb
    networks:
      - hostnet
    ports:
      - 27017:27017
    command: --bind_ip_all
    volumes:
      - mongodb_volume:/data

  postgres:
    image: postgres:17.2
    hostname: postgres
    networks:
      - hostnet
    ports:
    - 5432:5432
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: default_database
    volumes:
      - postgres_volume:/var/lib/postgresql/data/

  # Settings and configurations that are common for all containers
  x-minio-common: &minio-common
    image: quay.io/minio/minio:RELEASE.2024-11-07T00-52-20Z
    command: server --console-address ":9001" http://minio{1...4}/data{1...2}
    expose:
      - "9000"
      - "9001"
    env_file:
      - ./conf/minio/minio.env
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 5s
      timeout: 5s
      retries: 5

  # starts 4 docker containers running minio server instances.
  # using nginx reverse proxy, load balancing, you can access
  # it through port 9000.
  minio1:
    <<: *minio-common
    hostname: minio1
    networks:
      - hostnet
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    networks:
      - hostnet
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    networks:
      - hostnet
    volumes:
      - data3-1:/data1
      - data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    networks:
      - hostnet
    volumes:
      - data4-1:/data1
      - data4-2:/data2

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    networks:
      - hostnet
    volumes:
      - ./conf/minio/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4

  mosquitto:
    image: eclipse-mosquitto:2.0
    hostname: mosquitto
    networks:
      - hostnet
    container_name: mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
    volumes:
      - ./conf/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
  
  keycloak:
    image: quay.io/keycloak/keycloak:26.0.6
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://kc-postgres:5432/keycloak
      DB_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    networks:
      - hostnet
    ports:
        - 8080:8080
    depends_on:
        - kc-postgres
  
  kc-postgres:
    image: postgres:17.2
    hostname: kc-postgres
    networks:
      - hostnet
    expose:
    - 5432
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak 
      POSTGRES_DB: keycloak
    volumes:
      - kc_volume:/var/lib/postgresql/data/

  iotagent-opcua:
    image: iotagent4fiware/iotagent-opcua:2.2.8
    hostname: iotagent-opcua
    depends_on:
      - mongodb
      - orion
    networks:
      - hostnet
    ports:
      - "4041:4041"
      - "9229:9229"
    environment:
      - "CONFIGURATION_TYPE=auto"
      - "CONFIG_RETRIEVAL=false"
      - "DEFAULT_KEY=iot"
      - "DEFAULT_TRANSPORT=OPCUA"
      - "IOTA_LOGLEVEL=DEBUG"
      - "IOTA_TIMESTAMP=true"
      - "IOTA_CB_HOST=orion"
      - "IOTA_CB_PORT=1026"
      - "IOTA_CB_NGSIVERSION=v2"
      - "IOTA_CB_NGSILDCONTEXT=https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld"
      - "IOTA_CB_SERVICE=opcua_pioneer"
      # It depends on use case e.g. "smc", "waam"
      - "IOTA_CB_SUBSERVICE=/smc"
      - "IOTA_NORTH_PORT=4041"
      - "IOTA_REGISTRY_TYPE=mongodb"
      - "IOTA_MONGO_HOST=mongodb"
      - "IOTA_MONGO_PORT=27017"
      - "IOTA_MONGO_DB=iotagent_opcua"
      - "IOTA_SERVICE=opcua_pioneer"
      - "IOTA_SUBSERVICE=/smc"
      - "IOTA_PROVIDER_URL=http://iotagent-opcua:4041"
      - "IOTA_DEVICEREGDURATION=P20Y"
      - "IOTA_DEFAULTTYPE=Device"
      - "IOTA_DEFAULTRESOURCE=/iot/opcua"
      - "IOTA_EXPLICITATTRS=true"
      - "IOTA_EXTENDED_FORBIDDEN_CHARACTERS=[]"
      - "IOTA_AUTOPROVISION=true"
      - "IOTA_EXPRESS_LIMIT=50mb"
      # It depends on use case. OPCUA Server address
      - "IOTA_OPCUA_ENDPOINT=opc.tcp://opcuaserverhost:5001/UA/Server"
      - "IOTA_OPCUA_SECURITY_MODE=None"
      - "IOTA_OPCUA_SECURITY_POLICY=None"
      #- "IOTA_OPCUA_SECURITY_USERNAME=null"
      #- "IOTA_OPCUA_SECURITY_PASSWORD=null"
      - "IOTA_OPCUA_UNIQUE_SUBSCRIPTION=false"
      - "IOTA_OPCUA_SUBSCRIPTION_NOTIFICATIONS_PER_PUBLISH=1000"
      - "IOTA_OPCUA_SUBSCRIPTION_PUBLISHING_ENABLED=true"
      - "IOTA_OPCUA_SUBSCRIPTION_REQ_LIFETIME_COUNT=100"
      - "IOTA_OPCUA_SUBSCRIPTION_REQ_MAX_KEEP_ALIVE_COUNT=10"
      - "IOTA_OPCUA_SUBSCRIPTION_REQ_PUBLISHING_INTERVAL=1000"
      - "IOTA_OPCUA_SUBSCRIPTION_PRIORITY=128"
      - "IOTA_OPCUA_MT_POLLING=false"
      - "IOTA_OPCUA_MT_AGENT_ID=age01_"
      - "IOTA_OPCUA_MT_ENTITY_ID=age01_smc"
      - "IOTA_OPCUA_MT_ENTITY_TYPE=Device"
      - "IOTA_OPCUA_MT_NAMESPACE_IGNORE=0,7"
      - "IOTA_OPCUA_MT_STORE_OUTPUT=true"
    volumes:
      - ./conf/iotagent-opcua:/opt/iotagent-opcua/conf


  # iotagent-json:
  #   image: quay.io/fiware/iotagent-json:3.6.0
  #   hostname: iotagent-json
  #   depends_on:
  #     - mongodb
  #   networks:
  #     - hostnet
  #   ports:
  #     - "4042:4041"
  #     - "7896:7896"
  #   environment:
  #     - IOTA_CB_HOST=orion # name of the context broker to update context
  #     - IOTA_CB_PORT=1026 # port the context broker listens on to update context
  #     - IOTA_NORTH_PORT=4041
  #     - IOTA_REGISTRY_TYPE=mongodb #Whether to hold IoT device info in memory or in a database
  #     - IOTA_LOG_LEVEL=DEBUG # The log level of the IoT Agent
  #     - IOTA_DEFAULT_EXPRESSION_LANGUAGE=jexl
  #     - IOTA_TIMESTAMP=true # Supply timestamp information with each measurement
  #     - IOTA_CB_NGSI_VERSION=v2 # use NGSIv2 when sending updates for active attributes
  #     - IOTA_MONGO_HOST=mongodb # The host name of MongoDB
  #     - IOTA_MONGO_PORT=27017 # The port mongoDB is listening on
  #     - IOTA_MONGO_DB=iotagent_json # The name of the database used in mongoDB
  #     - IOTA_HTTP_PORT=7896 # The port used for device traffic over HTTP
  #     - IOTA_PROVIDER_URL=http://iotagent-json:4041
  #     - IOTA_DEFAULT_RESOURCE=/iot/json

  iotagent-aas:
    image: iotagent4fiware/iotagent-aas:1.0.2
    hostname: iotagent-aas
    depends_on:
      - mongodb
      - orion
    networks:
      - hostnet
    ports:
      - "4043:4041"
      - "7897:7897"
    environment:
      - "DEFAULT_KEY=iot"
      - "DEFAULT_TRANSPORT=HTTP"
      - "IOTA_LOGLEVEL=DEBUG"
      - "IOTA_TIMESTAMP=true"
      - "IOTA_CB_HOST=orion"
      - "IOTA_CB_PORT=1026"
      - "IOTA_CB_NGSIVERSION=v2"
      - "IOTA_CB_NGSILDCONTEXT=https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld"
      - "IOTA_CB_SERVICE=aas_pioneer"
      # It depends on use case e.g. "smc", "waam"
      - "IOTA_CB_SUBSERVICE=/smc"
      - "IOTA_NORTH_PORT=4041"
      - "IOTA_REGISTRY_TYPE=mongodb"
      - "IOTA_MONGO_HOST=mongodb"
      - "IOTA_MONGO_PORT=27017"
      - "IOTA_MONGO_DB=iotagent_aas"
      - "IOTA_SERVICE=aas_ticket"
      - "IOTA_SUBSERVICE=/demo"
      - "IOTA_PROVIDER_URL=http://iotagent-aas:4041"
      - "IOTA_DEVICEREGDURATION=P20Y"
      - "IOTA_DEFAULTTYPE=Device"
      - "IOTA_DEFAULTRESOURCE=/iot/aas"
      - "IOTA_EXPLICITATTRS=true"
      - "IOTA_EXTENDED_FORBIDDEN_CHARACTERS=[]"
      - "IOTA_AUTOPROVISION=true"
      - "IOTA_MQTT_PROTOCOL=mqtt"
      - "IOTA_MQTT_HOST=mosquitto"
      - "IOTA_MQTT_PORT=1883"
      - "IOTA_MQTT_CA="
      - "IOTA_MQTT_CERT="
      - "IOTA_MQTT_KEY="
      - "IOTA_MQTT_REJECT_UNAUTHORIZED=true"
      - "IOTA_MQTT_USERNAME="
      - "IOTA_MQTT_PASSWORD="
      - "IOTA_MQTT_QOS=0"
      - "IOTA_MQTT_RETAIN=false"
      - "IOTA_MQTT_RETRIES=5"
      - "IOTA_MQTT_RETRY_TIME=5"
      - "IOTA_MQTT_KEEPALIVE=60"
      - "IOTA_MQTT_AVOID_LEADING_SLASH=false"
      - "IOTA_MQTT_DISABLED=false"
      - "IOTA_HTTP_PORT=7897"
      - "IOTA_HTTP_TIMEOUT=1000"
      - "IOTA_HTTP_KEY="
      - "IOTA_HTTP_CERT="
      # It depends on use case. AAS Server address
      - "IOTA_AAS_ENDPOINT=http://aasserverhost:9000/aas"
      - "IOTA_AAS_MT_AGENT_ID=age01_"
      - "IOTA_AAS_MT_ENTITY_ID=aas_smc"
      - "IOTA_AAS_MT_ENTITY_TYPE=Device"
      - "IOTA_AAS_MT_STORE_OUTPUT=true"
    volumes:
      - ./conf/iotagent-aas:/opt/iotagent-aas/conf

  iotagent-ui-spa:
    image: iotagent4fiware/iotagent-ui-spa:1.0.3
    hostname: iotagent-ui-spa
    depends_on:
      - iotagent-ui-bff
    networks:
      - hostnet
    ports:
      - "8087:80"
    environment:
      <<: *common-variables
      BFF_API_BASE_URL: 'http://localhost:9005/api/v1'

  iotagent-ui-bff:
    image: iotagent4fiware/iotagent-ui-bff:1.0.2
    hostname: iotagent-ui-bff
    depends_on:
      - mongodb
    networks:
      - hostnet
    ports:
      - "9005:9000"
    environment:
      <<: *common-variables
      NODE_ENV: 'true'
      PORT: '9000'
      MONGO_HOST: 'mongodb'
      MONGO_PORT: '27017'
      MONGO_DB: 'iotagent_ui'
      AUTH_SECRET: 'secret'
      ADMIN_ACCOUNT: 'true'

  grafana:
    image: grafana/grafana:10.2.3
    hostname: grafana
    container_name: grafana
    restart: always
    networks:
      - hostnet
    volumes:
      - grafanavolume:/var/lib/grafana
    ports:
      - 3000:3000
    environment:
      - GF_SERVER_ROOT_URL=http://localhost:3000

  pgadmin:
    image: dpage/pgadmin4:8.4
    container_name: pgadmin4
    restart: always
    networks:
      - hostnet
    depends_on:
      - postgres
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "test@test.it"
      PGADMIN_DEFAULT_PASSWORD: "password"
    volumes:
      - pgadminvolume:/var/lib/pgadmin

## By default, this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  mongodb_volume:
  postgres_volume:
  kc_volume:
  pgadminvolume:
  grafanavolume:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:

networks:
   hostnet:
