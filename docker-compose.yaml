x-common-variables: &common-variables
  KEYCLOAK_URL: https://keycloak.pioneer-project.eu/auth
  KEYCLOAK_REALM: pioneer
  KEYCLOAK_CLIENT_ID: iotagentui_client
  KEYCLOAK_REDIRECT_URI: https://iotagent-ui.pioneer-project.eu
  KEYCLOAK_REALM_PUBLIC_KEY: 
  
services:
  oauth2-proxy:
    container_name: oauth2-proxy
    profiles: [ "oip-sec" ]
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.7.1
    command:
      --config=/etc/oauth2-proxy.cfg
      --show-debug-on-error
      --skip-jwt-bearer-tokens=true
      --oidc-extra-audience=account
    ports: []
    hostname: oauth2-proxy
    env_file:
        - conf/oauth2-proxy/oauth2-proxy.env
    restart: always
    volumes:
      - "./conf/oauth2-proxy/oauth2-proxy-traefik.cfg:/etc/oauth2-proxy.cfg"
    networks:
      hostnet:
    extra_hosts:
      - keycloak.pioneer-project.eu:172.17.0.1

  gateway:
    profiles: [ "oip-sec" ]
    container_name: gateway
    hostname: traefik
    image: traefik:v2.11.13
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addrouterslabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--entryPoints.metrics.address=:8082"
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--accesslog.fields.defaultMode=keep"
      - "--accesslog.fields.names.RouterName=keep"
    volumes:
      - "./conf/traefik:/etc/traefik"
    ports:
      - "80:80"
      - "443:443"
      - "9090:8080"
    networks:
      hostnet:

  orion:
    container_name: orion
    profiles: [ "oip-core" ]
    image: fiware/orion:3.10.1
   # image: fiware/orion-ld:1.4.0
    hostname: orion
    depends_on:
      - mongodb
    networks:
      - hostnet
    ports:
      - "1026:1026"
    command: -dbhost mongodb -logLevel DEBUG
    #command: -dbhost mongodb -logLevel DEBUG -forwarding -experimental

  draco:
    profiles: [ "oip-core" ]
    image: draco
    build: ./build/draco
    hostname: draco
    container_name: draco
    networks:
      - hostnet
    ports:
        # NIFI web UI (https)
        - 8443:8443
        # Listen AAS
        - 8085:8085
        # Listen Orion
        - 8086:8086
    env_file:
        - conf/draco/nifi.env
    tty: true     
    volumes:
      - ./conf/draco/templates:/opt/nifi/nifi-current/templates

  mongodb:
    profiles: [ "oip-core" ]
    image: mongo:7.0.5
    hostname: mongodb
    container_name: mongodb
    networks:
      - hostnet
    ports:
      - 27017:27017
    command: --bind_ip_all
    volumes:
      - mongodb_volume:/data

  postgres:
    profiles: [ "oip-core" ]
    image: postgres:17.2
    hostname: postgres
    container_name: postgres
    networks:
      - hostnet
    ports:
    - 5432:5432
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: default_database
    volumes:
      - postgres_volume:/var/lib/postgresql/data/

  minio:
    container_name: minio
    hostname: minio
    profiles: [ "oip-core" ]
    image: minio/minio:RELEASE.2024-11-07T00-52-20Z
    restart: unless-stopped
    volumes:
      - minio:/data
    env_file:
      - ./conf/minio/minio.env
    command: server --console-address ":9001" /data
    networks:
      - hostnet
    ports:
      - 9001:9001

  mosquitto:
    profiles: [ "oip-core" ]
    image: eclipse-mosquitto:2.0
    hostname: mosquitto
    networks:
      - hostnet
    container_name: mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
    volumes:
      - ./conf/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
  
  keycloak:
    profiles: [ "oip-sec" ]
    container_name: keycloak
    hostname: keycloak
    ports:
      - 8080:8080
    image: quay.io/keycloak/keycloak:26.0.6
    command: start-dev --http-port=8080 --import-realm
    env_file:
      - ./conf/keycloak/keycloak.env
    networks:
      - hostnet
    depends_on:
      - kc-postgres
    volumes:
      - ./conf/keycloak/realms/realm-pioneer.json:/opt/keycloak/data/import/realm-pioneer.json
      - ./conf/keycloak/theme:/opt/keycloak/themes/pioneer
  
  kc-postgres:
    profiles: [ "oip-sec" ]
    image: postgres:17.2
    hostname: kc-postgres
    container_name: kc-postgres
    networks:
      - hostnet
    expose:
    - 5432
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak 
      POSTGRES_DB: keycloak
    volumes:
      - kc_volume:/var/lib/postgresql/data/

  iotagent-opcua:
    profiles: [ "oip-connector-opcua" ]
    image: iotagent4fiware/iotagent-opcua:2.2.8
    hostname: iotagent-opcua
    container_name: iotagent-opcua
    networks:
      - hostnet
    ports:
      - "4041:4041"
      - "9229:9229"
    env_file:
      - conf/iotagent-opcua/iotagent-opcua.env
    volumes:
      - ./conf/iotagent-opcua:/opt/iotagent-opcua/conf

  iotagent-json:
    profiles: [ "oip-connector-json" ]
    image: quay.io/fiware/iotagent-json:3.6.0
    hostname: iotagent-json
    container_name: iotagent-json
    networks:
      - hostnet
    ports:
      - "4042:4041"
      - "7896:7896"
    env_file:
      - conf/iotagent-json/iotagent-json.env

  aas-proxy:
    profiles: [ "oip-connector-aas-proxy" ]
    build: ./build/aas-proxy
    hostname: aas-proxy
    container_name: aas-proxy
    networks:
      - hostnet
    ports:
      - 3001:3000
    env_file:
      - conf/aas-proxy/aas-proxy.env

  iotagent-aas:
    profiles: [ "oip-connector-aas" ]
    image: iotagent4fiware/iotagent-aas:1.0.6
    hostname: iotagent-aas
    container_name: iotagent-aas
    networks:
      - hostnet
    ports:
      - "4043:4041"
      - "7897:7897"
    env_file:
      - conf/iotagent-aas/iotagent-aas.env
    volumes:
      - ./conf/iotagent-aas:/opt/iotagent-aas/conf

  iotagent-ui-spa:
    profiles: [ "oip-connector-opcua", "oip-connector-json", "oip-connector-aas" ]
    image: iotagent4fiware/iotagent-ui-spa:1.0.3
    hostname: iotagent-ui-spa
    container_name: iotagent-ui-spa
    depends_on:
      - iotagent-ui-bff
    networks:
      - hostnet
    ports:
      - "8087:80"
    environment:
      BFF_API_BASE_URL: 'https://iotagent-ui.pioneer-project.eu/api/v1'
      APP_BASE_HREF: '/'

  iotagent-ui-bff:
    profiles: [ "oip-connector-opcua", "oip-connector-json", "oip-connector-aas" ]
    image: iotagent4fiware/iotagent-ui-bff:1.0.2
    hostname: iotagent-ui-bff
    container_name: iotagent-ui-bff
    networks:
      - hostnet
    extra_hosts:
      - keycloak.pioneer-project.eu:172.17.0.1
    ports:
      - "9005:9000"
    environment:
      NODE_ENV: 'true'
      PORT: '9000'
      MONGO_HOST: 'mongodb'
      MONGO_PORT: '27017'
      MONGO_DB: 'iotagent_ui'
      AUTH_SECRET: 'secret'
      ADMIN_ACCOUNT: 'true'

  grafana:
    profiles: [ "oip-visualization" ]
    image: grafana/grafana:10.2.3
    hostname: grafana
    container_name: grafana
    restart: always
    networks:
      - hostnet
    volumes:
      - grafanavolume:/var/lib/grafana
    ports:
      - 3000:3000
    environment:
      - GF_SERVER_ROOT_URL=https://grafana.pioneer-project.eu

## By default, this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  mongodb_volume:
  postgres_volume:
  kc_volume:
  pgadminvolume:
  grafanavolume:
  minio:

networks:
   hostnet:
